//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Game/Scripts/Core/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""Player Movement"",
            ""id"": ""2b9530ed-13c2-472a-8bd6-01ff1e19f3ba"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dda200a5-299f-4528-8de8-2bd83b44c86f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4bf8ada7-e9e8-4149-bc02-f9df73ca6c7e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RingAcma"",
                    ""type"": ""Button"",
                    ""id"": ""0678d4a6-8208-4abe-a19e-d3fd47f36127"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SagClick"",
                    ""type"": ""Button"",
                    ""id"": ""c9b9c222-8607-4554-86d7-d03ead38d68b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SolClick"",
                    ""type"": ""Button"",
                    ""id"": ""0293f3bc-24c0-437c-8701-5218150c5d85"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""bd8179ff-60e8-497d-98c6-a5e0ca0fce8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""f2d0e4a7-02bc-4d5c-815a-ceb58b9a1be4"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""db461149-60fe-46e7-8c22-ec174edcaaef"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e523e066-a449-4e60-95a6-074a411bb87b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""83188cc4-6535-443c-b7c9-f162f3e03310"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1ef9a4e0-3935-4f11-9712-8bae5af4d17b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8f6af183-467d-42fb-ac98-d26eee98627b"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02e32830-579a-46b2-b250-9619103e21d6"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SagClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""436a6a7f-26bb-4b36-9538-95844f22a1f3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RingAcma"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""648f819e-5a51-4d68-9f8c-5c4249c9d2e9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SolClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c740e301-a19e-4490-ba84-6dce25aa2685"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ActionSelection"",
            ""id"": ""9b55a0e5-98e4-4b49-b516-82591902905c"",
            ""actions"": [
                {
                    ""name"": ""ActionSelectorr"",
                    ""type"": ""Button"",
                    ""id"": ""241e65b4-1693-40b2-a2f7-a0d7c493fcbb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2b9c8bd6-eef2-4ae0-a153-49eba4a532b3"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""ActionSelectorr"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e765e0f2-6637-4ffb-b731-b407dcb58e17"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""ActionSelectorr"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cc815ff-ca1a-4b06-9d8e-cb3258ac0992"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""ActionSelectorr"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aba67f94-0ddd-49f4-a2b1-2f97dcdcf0f7"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=4)"",
                    ""groups"": """",
                    ""action"": ""ActionSelectorr"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""042607f7-d914-4ad2-8073-219d49810495"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=5)"",
                    ""groups"": """",
                    ""action"": ""ActionSelectorr"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12396767-6e0f-47e0-9b6b-41bb146b7cbd"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=6)"",
                    ""groups"": """",
                    ""action"": ""ActionSelectorr"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38eb8562-7810-4fc6-b292-3cdf3e7453ee"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=7)"",
                    ""groups"": """",
                    ""action"": ""ActionSelectorr"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbef4cbc-a22c-4f26-b8fc-a83860ebc096"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=8)"",
                    ""groups"": """",
                    ""action"": ""ActionSelectorr"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player Movement
        m_PlayerMovement = asset.FindActionMap("Player Movement", throwIfNotFound: true);
        m_PlayerMovement_Movement = m_PlayerMovement.FindAction("Movement", throwIfNotFound: true);
        m_PlayerMovement_Camera = m_PlayerMovement.FindAction("Camera", throwIfNotFound: true);
        m_PlayerMovement_RingAcma = m_PlayerMovement.FindAction("RingAcma", throwIfNotFound: true);
        m_PlayerMovement_SagClick = m_PlayerMovement.FindAction("SagClick", throwIfNotFound: true);
        m_PlayerMovement_SolClick = m_PlayerMovement.FindAction("SolClick", throwIfNotFound: true);
        m_PlayerMovement_Jump = m_PlayerMovement.FindAction("Jump", throwIfNotFound: true);
        // ActionSelection
        m_ActionSelection = asset.FindActionMap("ActionSelection", throwIfNotFound: true);
        m_ActionSelection_ActionSelectorr = m_ActionSelection.FindAction("ActionSelectorr", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player Movement
    private readonly InputActionMap m_PlayerMovement;
    private IPlayerMovementActions m_PlayerMovementActionsCallbackInterface;
    private readonly InputAction m_PlayerMovement_Movement;
    private readonly InputAction m_PlayerMovement_Camera;
    private readonly InputAction m_PlayerMovement_RingAcma;
    private readonly InputAction m_PlayerMovement_SagClick;
    private readonly InputAction m_PlayerMovement_SolClick;
    private readonly InputAction m_PlayerMovement_Jump;
    public struct PlayerMovementActions
    {
        private @PlayerActions m_Wrapper;
        public PlayerMovementActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerMovement_Movement;
        public InputAction @Camera => m_Wrapper.m_PlayerMovement_Camera;
        public InputAction @RingAcma => m_Wrapper.m_PlayerMovement_RingAcma;
        public InputAction @SagClick => m_Wrapper.m_PlayerMovement_SagClick;
        public InputAction @SolClick => m_Wrapper.m_PlayerMovement_SolClick;
        public InputAction @Jump => m_Wrapper.m_PlayerMovement_Jump;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Camera.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
                @Camera.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
                @Camera.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
                @RingAcma.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRingAcma;
                @RingAcma.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRingAcma;
                @RingAcma.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRingAcma;
                @SagClick.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSagClick;
                @SagClick.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSagClick;
                @SagClick.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSagClick;
                @SolClick.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSolClick;
                @SolClick.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSolClick;
                @SolClick.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSolClick;
                @Jump.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
            }
            m_Wrapper.m_PlayerMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Camera.started += instance.OnCamera;
                @Camera.performed += instance.OnCamera;
                @Camera.canceled += instance.OnCamera;
                @RingAcma.started += instance.OnRingAcma;
                @RingAcma.performed += instance.OnRingAcma;
                @RingAcma.canceled += instance.OnRingAcma;
                @SagClick.started += instance.OnSagClick;
                @SagClick.performed += instance.OnSagClick;
                @SagClick.canceled += instance.OnSagClick;
                @SolClick.started += instance.OnSolClick;
                @SolClick.performed += instance.OnSolClick;
                @SolClick.canceled += instance.OnSolClick;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
            }
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // ActionSelection
    private readonly InputActionMap m_ActionSelection;
    private IActionSelectionActions m_ActionSelectionActionsCallbackInterface;
    private readonly InputAction m_ActionSelection_ActionSelectorr;
    public struct ActionSelectionActions
    {
        private @PlayerActions m_Wrapper;
        public ActionSelectionActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ActionSelectorr => m_Wrapper.m_ActionSelection_ActionSelectorr;
        public InputActionMap Get() { return m_Wrapper.m_ActionSelection; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionSelectionActions set) { return set.Get(); }
        public void SetCallbacks(IActionSelectionActions instance)
        {
            if (m_Wrapper.m_ActionSelectionActionsCallbackInterface != null)
            {
                @ActionSelectorr.started -= m_Wrapper.m_ActionSelectionActionsCallbackInterface.OnActionSelectorr;
                @ActionSelectorr.performed -= m_Wrapper.m_ActionSelectionActionsCallbackInterface.OnActionSelectorr;
                @ActionSelectorr.canceled -= m_Wrapper.m_ActionSelectionActionsCallbackInterface.OnActionSelectorr;
            }
            m_Wrapper.m_ActionSelectionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ActionSelectorr.started += instance.OnActionSelectorr;
                @ActionSelectorr.performed += instance.OnActionSelectorr;
                @ActionSelectorr.canceled += instance.OnActionSelectorr;
            }
        }
    }
    public ActionSelectionActions @ActionSelection => new ActionSelectionActions(this);
    public interface IPlayerMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnRingAcma(InputAction.CallbackContext context);
        void OnSagClick(InputAction.CallbackContext context);
        void OnSolClick(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
    public interface IActionSelectionActions
    {
        void OnActionSelectorr(InputAction.CallbackContext context);
    }
}
